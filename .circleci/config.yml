# - Jobs it needs:
#   - build
#   - lint
#   - test
#   - gh-pages

version: 2

defaults: &defaults
  docker:
    - image: fmscat/glcat-ts-circleci:14.4.0
  environment:
    GIT_AUTHOR_EMAIL: email@example.com
    GIT_AUTHOR_NAME: CircleCI
  working_directory: ~/workspace

jobs:
  fetch:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "yarn.lock" }}
            - deps-
      - run:
          name: Node version
          command: node -v
      - run:
          name: Fetch deps
          command: yarn
      - save_cache:
          key: deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/workspace
          paths: .

  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Build
          command: yarn build
      - run:
          name: Docs
          command: yarn docs
      - persist_to_workspace:
          root: ~/workspace
          paths: .

  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Lint
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Test
          command: xvfb-run -s "-ac -screen 0 1920x1080x24" yarn test --no-cache

  artifacts:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - store_artifacts:
          path: dist
      - store_artifacts:
          path: types
      - store_artifacts:
          path: examples
      - store_artifacts:
          path: docs

  deploy-master:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/workspace/.npmrc
      - run:
          name: Publish
          command: npm publish --tag latest

  nightly-condition:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: See whether we should deploy today's nightly or not
          command: |
            if [ "$(git log --since=yesterday)" == "" ]; then
              echo "It seems we don't have to deploy our nightly for today..."; exit 1
            fi

  deploy-nightly:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/workspace/.npmrc
      - run:
          name: Configure Git
          command: |
            git config user.email $GIT_AUTHOR_EMAIL
            git config user.name $GIT_AUTHOR_NAME
      - run:
          name: Version
          command: npm version $(node ./utils/gen-nightly-version.js)
      - run:
          name: Publish
          command: npm publish --tag next

  gh-pages:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Configure Git
          command: |
            git config user.email $GIT_AUTHOR_EMAIL
            git config user.name $GIT_AUTHOR_NAME
      - run:
          name: Push to gh-pages
          command: yarn gh-pages

workflows:
  version: 2
  inspection:
    jobs:
      - fetch
      - build:
          requires:
            - fetch
      - lint:
          requires:
            - fetch
      - test:
          requires:
            - fetch
      - artifacts:
          requires:
            - build
      - deploy-master:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - gh-pages:
          requires:
            - build
          filters:
            branches:
              only:
                - master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - dev
    jobs:
      - nightly-condition
      - fetch:
          requires:
            - nightly-condition
      - build:
          requires:
            - fetch
      - artifacts:
          requires:
            - build
      - deploy-nightly:
          requires:
            - build
